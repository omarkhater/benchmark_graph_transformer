[tool.poetry]
name        = "graph-transformer-benchmark"
version     = "0.1.0"
description = "Benchmark suite for GraphTransformer variants with MLflow & Hydra"
authors     = ["Omar Khater"]
license     = "MIT"
readme      = "README.md"
packages    = [{ include = "graph_transformer_benchmark", from = "src" }]

[tool.poetry.dependencies]
python = "^3.12"

# ───── Core Torch build (pt26 + cu126) ─────
torch = { version = "2.6.0+cu126", source = "pytorch-cu126" }

# ───── CUDA runtimes absolutely required by torch-2.6.0+cu126 ─────
# (pulled from `pip show torch | grep Requires-Dist`)
nvidia-cuda-runtime-cu12   = { version = "12.6.77",  source = "pytorch-cu126" }
nvidia-cuda-nvrtc-cu12     = { version = "12.6.77",  source = "pytorch-cu126" }
nvidia-cuda-cupti-cu12     = { version = "12.6.80",  source = "pytorch-cu126" }
nvidia-nvtx-cu12           = { version = "12.6.77",  source = "pytorch-cu126" }
nvidia-nvjitlink-cu12      = { version = "12.6.85",  source = "pytorch-cu126" }
nvidia-cublas-cu12         = { version = "12.6.4.1", source = "pytorch-cu126" }
nvidia-cufft-cu12          = { version = "11.3.0.4", source = "pytorch-cu126" }
nvidia-curand-cu12         = { version = "10.3.7.77", source = "pytorch-cu126" }
nvidia-cusolver-cu12       = { version = "11.7.1.2", source = "pytorch-cu126" }
nvidia-cusparse-cu12       = { version = "12.5.4.2", source = "pytorch-cu126" }
nvidia-cusparselt-cu12     = { version = "0.6.3",   source = "pytorch-cu126" }
nvidia-cudnn-cu12          = { version = "9.5.1.17", source = "pytorch-cu126" }
nvidia-nccl-cu12           = { version = "2.21.5",   source = "pytorch-cu126" }
triton                     = { version = "3.2.0",    source = "pytorch-cu126" }

# ───── Low-level PyG C++/CUDA extensions (match the pt26+cu126 index) ─────
pyg-lib          = { version = "0.4.0",  source = "pyg_whl" }
torch-sparse     = { version = "0.6.18", source = "pyg_whl" }
torch-scatter    = { version = "2.1.2",  source = "pyg_whl" }
torch-cluster    = { version = "1.6.3",  source = "pyg_whl" }
torch-spline-conv= { version = "1.2.2",  source = "pyg_whl" }

# ───── High-level PyG API (local checkout) ─────
torch-geometric = { path = "../pytorch_geometric", develop = true }

# ───── Pure-Python deps ─────
mlflow               = "^2.22"
hydra-core           = "^1.3"
omegaconf            = "^2.2.3"
antlr4-python3-runtime = "^4.13.2"
charset-normalizer   = "^3.4.2"
attrs                = "^25.3.0"
hydra-optuna-sweeper = "^1.2.0"
ogb                  = "^1.3.6"
pytest-cov           = "^6.1.1"

[tool.poetry.group.dev]
optional = false

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pre-commit = "^3.3.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "pytorch-cu126"
url = "https://download.pytorch.org/whl/cu126"
priority = "supplemental"

[[tool.poetry.source]]
name = "pyg_whl"
url = "https://data.pyg.org/whl/torch-2.6.0+cu126.html"
priority = "supplemental"