name: CI Tests

"on":
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  test-normal:
    name: Run Normal Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run normal tests
        run: |
          COVERAGE_FILE=.coverage.normal poetry run pytest -m "not slow" \
            --cov=src \
            --cov-report=term-missing

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-normal
          path: .coverage.normal
          retention-days: 1
        if: always() && hashFiles('.coverage.normal') != ''

  test-slow:
    name: Run Slow Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run slow tests
        run: |
          COVERAGE_FILE=.coverage.slow poetry run pytest -m slow \
            --cov=src \
            --cov-report=term-missing

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-slow
          path: .coverage.slow
          retention-days: 1
        if: always() && hashFiles('.coverage.slow') != ''

  sonar:
    name: SonarQube Analysis
    needs: [test-normal, test-slow]  # Wait for both test jobs to complete
    runs-on: ubuntu-latest
    if: always() && (needs.test-normal.result == 'success' || needs.test-slow.result == 'success')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Download normal coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-normal
          path: .
        continue-on-error: true

      - name: Download slow coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-slow
          path: .
        continue-on-error: true

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install coverage
        run: pip install coverage

      - name: Combine coverage data
        run: |
          # Check which coverage files exist
          coverage_files=""
          if [ -f ".coverage.normal" ]; then
            coverage_files="$coverage_files .coverage.normal"
          fi
          if [ -f ".coverage.slow" ]; then
            coverage_files="$coverage_files .coverage.slow"
          fi

          if [ -n "$coverage_files" ]; then
            coverage combine $coverage_files
            coverage xml -o coverage.xml
          else
            echo "No coverage files found, creating empty coverage.xml"
            echo '<?xml version="1.0" ?><coverage version="7.0" timestamp="0" lines-valid="0" lines-covered="0" line-rate="0" branches-covered="0" branches-valid="0" branch-rate="0" complexity="0"></coverage>' > coverage.xml
          fi

      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
